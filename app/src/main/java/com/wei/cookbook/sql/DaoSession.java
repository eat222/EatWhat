package com.wei.cookbook.sql;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.wei.cookbook.model.CommentBean;
import com.wei.cookbook.model.FoodBean;
import com.wei.cookbook.model.Profile;
import com.wei.cookbook.model.Speaking;
import com.wei.cookbook.model.UserBean;

import com.wei.cookbook.sql.CommentBeanDao;
import com.wei.cookbook.sql.FoodBeanDao;
import com.wei.cookbook.sql.ProfileDao;
import com.wei.cookbook.sql.SpeakingDao;
import com.wei.cookbook.sql.UserBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig commentBeanDaoConfig;
    private final DaoConfig foodBeanDaoConfig;
    private final DaoConfig profileDaoConfig;
    private final DaoConfig speakingDaoConfig;
    private final DaoConfig userBeanDaoConfig;

    private final CommentBeanDao commentBeanDao;
    private final FoodBeanDao foodBeanDao;
    private final ProfileDao profileDao;
    private final SpeakingDao speakingDao;
    private final UserBeanDao userBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        commentBeanDaoConfig = daoConfigMap.get(CommentBeanDao.class).clone();
        commentBeanDaoConfig.initIdentityScope(type);

        foodBeanDaoConfig = daoConfigMap.get(FoodBeanDao.class).clone();
        foodBeanDaoConfig.initIdentityScope(type);

        profileDaoConfig = daoConfigMap.get(ProfileDao.class).clone();
        profileDaoConfig.initIdentityScope(type);

        speakingDaoConfig = daoConfigMap.get(SpeakingDao.class).clone();
        speakingDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        commentBeanDao = new CommentBeanDao(commentBeanDaoConfig, this);
        foodBeanDao = new FoodBeanDao(foodBeanDaoConfig, this);
        profileDao = new ProfileDao(profileDaoConfig, this);
        speakingDao = new SpeakingDao(speakingDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);

        registerDao(CommentBean.class, commentBeanDao);
        registerDao(FoodBean.class, foodBeanDao);
        registerDao(Profile.class, profileDao);
        registerDao(Speaking.class, speakingDao);
        registerDao(UserBean.class, userBeanDao);
    }
    
    public void clear() {
        commentBeanDaoConfig.clearIdentityScope();
        foodBeanDaoConfig.clearIdentityScope();
        profileDaoConfig.clearIdentityScope();
        speakingDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
    }

    public CommentBeanDao getCommentBeanDao() {
        return commentBeanDao;
    }

    public FoodBeanDao getFoodBeanDao() {
        return foodBeanDao;
    }

    public ProfileDao getProfileDao() {
        return profileDao;
    }

    public SpeakingDao getSpeakingDao() {
        return speakingDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

}
